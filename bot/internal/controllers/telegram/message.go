package telegram

import (
	"context"
	"fmt"

	"github.com/Ranik23/tbank-tech/bot/internal/models"

	"gopkg.in/telebot.v3"
)

func (b *BotHandlers) MessageHandler() telebot.HandlerFunc {
	return func(c telebot.Context) error {
		userID := c.Sender().ID
		
		userRaw, exists := b.users.Load(userID)
		var user *models.User
		if !exists {
			user = &models.User{State: StateFinished}
			b.users.Store(userID, user)
		} else {
			user = userRaw.(*models.User)
		}

		text := c.Text()

		switch user.State {
		case StateWaitingForLinkUNLINK:
			user.Link = text
			user.State = StateFinished
			b.users.Store(userID, user)

			response, err := b.botService.RemoveLink(context.Background(), userID, user.Link)
			if err != nil {
				return c.Send("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏!")
			}
			return c.Send(fmt.Sprintf("‚úÖ –°—Å—ã–ª–∫–∞ <code>%s</code> —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–∑–≤–∞–Ω–∞!", response.Url), telebot.ModeHTML)

		case StateWaitingForLinkLINK:
			user.Link = text
			response, err := b.botService.AddLink(context.Background(), userID, user.Link)
			user.State = StateFinished
			b.users.Store(userID, user)

			if err != nil {
				return c.Send("‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏!")
			}
			return c.Send(fmt.Sprintf("‚úÖ –°—Å—ã–ª–∫–∞ <code>%s</code> —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!", response.Url), telebot.ModeHTML)

		case StateWaitingForTheToken:
			token := text
			if user.Name == "" {
				return c.Send("‚ö†Ô∏è –û—à–∏–±–∫–∞: –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.", telebot.ModeHTML)
			}

			response, err := b.botService.RegisterUser(context.Background(), userID, user.Name, token)
			if err != nil {
				return c.Send("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
			}

			return c.Send(response.GetMessage(), telebot.ModeHTML)
		case StateWaitingForTheName:
			user.Name = text
			user.State = StateWaitingForTheToken
			b.users.Store(userID, user)
			return c.Send("üîë –í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω:")
		}

		return nil
	}
}
