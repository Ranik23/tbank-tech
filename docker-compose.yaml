version: '3.8'

services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    depends_on:
      - kafka
      - postgres
      - zookeeper
    networks:
      - kafkanetwork
    ports:
      - 7071:7071
    environment:
      - KAFKA_ADDRESSES=kafka:9092
      - KAFKA_TOPIC=commits
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=user
      - DATABASE_PASSWORD=pass
      - DATABASE_NAME=mydb
      - DATABASE_SSL=disable
      - SCRAPPER_SERVICE_HOST=scrapper
      - SCRAPPER_SERVICE_PORT=8082
      - SCRAPPER_SERVICE_HTTP_HOST=scrapper
      - SCRAPPER_SERVICE_HTTP_PORT=9091
      - TELEGRAM_BOT_HTTP_HOST=localhost
      - TELEGRAM_BOT_HTTP_PORT=7071
      - TELERGAM_BOT_HOST=0.0.0.0
      - TELEGRAM_BOT_PORT=8081
  scrapper:
    build:
      context: .
      dockerfile: Dockerfile.scrapper
    depends_on:
      - kafka
      - postgres
      - zookeeper
    networks:
      - kafkanetwork
    ports:
      - 9091:9091
    environment:
      - KAFKA_ADDRESSES=kafka:9092
      - KAFKA_TOPIC=commits
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=user
      - DATABASE_PASSWORD=pass
      - DATABASE_NAME=mydb
      - DATABASE_SSL=disable
      - SCRAPPER_SERVICE_HOST=0.0.0.0
      - SCRAPPER_SERVICE_PORT=8082
      - SCRAPPER_SERVICE_HTTP_HOST=0.0.0.0
      - SCRAPPER_SERVICE_HTTP_PORT=9091
      - TELEGRAM_BOT_HTTP_HOST=bot
      - TELEGRAM_BOT_HTTP_PORT=7071
      - TELERGAM_BOT_HOST=bot
      - TELEGRAM_BOT_PORT=8081
      - METRIC_SERVER_HOST=localhost
      - METRIC_SERVER_PORT=9090
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafkanetwork
    logging:
      driver: "none"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=INSIDE://:9092,OUTSIDE://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9092,OUTSIDE://localhost:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_NUM_PARTITIONS=1
    networks:
      - kafkanetwork
    logging:
      driver: "none"

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=mydb
      - POSTGRES_HOST_AUTH_METHOD=trust  
    ports:
      - "5432:5432"
    networks:
      - kafkanetwork
    logging:
      driver: "none"
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com  
      - PGADMIN_DEFAULT_PASSWORD=admin        
    ports:
      - "5050:80" 
    depends_on:
      - postgres
    networks:
      - kafkanetwork
    logging:
      driver: "none"
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9095:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - kafkanetwork

networks:
  kafkanetwork:
    driver: bridge
